<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>proj</groupId>
	<artifactId>com.proj</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<dependencies>


		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.0.0.CR2</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.36</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.12</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.1.3</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.8.6</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.8.6</version>
		</dependency>

	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.7</version>
				<configuration>
					<complianceLevel>1.8</complianceLevel>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>

package com.ormproj.persistence.transaction;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.annotation.After;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@Aspect
public class TransactionHandler {

    private final Logger logger = LoggerFactory.getLogger(TransactionHandler.class.getName());

    @Pointcut("execution(* com.ormproj.service.Service1.doSomthing(..))")
    public void propogatingTransaction() {}

    @Before("propogatingTransaction()")
    public void startTransactionInit(JoinPoint joinPoint) throws Throwable {
	logger.info("startTransactionInit");
    }
    
    @After("propogatingTransaction()")
    public void commitTransaction(JoinPoint joinPoint) throws Throwable {
	logger.info("commitTransaction");
    }


}


package com.ormproj.service;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class Service1 {

    private final Logger logger = LoggerFactory.getLogger(Service1.class.getName());

    public String doSomthing() {
	logger.info("doing Something");
	return "doSomething";
    }
}


package com.ormproj.main;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.ormproj.service.Service1;


public class Main {
    
    private static  final Logger logger = LoggerFactory.getLogger(Main.class.getName());
    
    public static void main(String[] args) {
	logger.info("Start");
	Service1 service1 = new Service1();
	service1.doSomthing();
    }
}


